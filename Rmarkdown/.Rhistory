setwd("C:/Users/GHISLAINE KOSSONOU/Desktop/4A ISARA")
setwd("C:/Users/GHISLAINE KOSSONOU/Desktop/4A ISARA/Module E OPEN")
setwd("C:/Users/GHISLAINE KOSSONOU/Desktop/4A ISARA/Module E OPEN")
knitr::opts_chunk$set(echo = TRUE)
jj<-30
pays<-"France"
covid<-read.csv2("https://www.data.gouv.fr/fr/datasets/r/f4935ed4-7a88-44e4-8f8a-33910a151d42" ,
header=TRUE, dec=".", sep=";",
skip=7, encoding = "UTF-8")
# Attention nous ne lisons pas les 3 première lignes grâce à skip=3
# Il s'agissait de 3 lignes de présentation des données
# Nous spécifions aussi l'encodage en UTF-8 (gestion des accents)
dim(covid)
covid[1:4, 1:5]
covid$Date<-as.POSIXct(covid$Date,format="%Y-%m-%d")
covidF<-covid[covid$Pays==pays,]
covidF<-covidF[order(covidF$Date),]
Dates <- covidF$Date[-1]
Jours <- 1:length(Dates)
Cases <- diff(covidF$Infections)
plot(Dates,Cases,type="b")
lines(Dates,predict(loess(Cases~Jours)),pch=16,cex=0.5,col="red")
nn<-nrow(covidF)
covidF<-covid[covid$Pays==pays,]
covidF<-covidF[order(covidF$Date),]
Dates <- covidF$Date[-1]
Jours <- 1:length(Dates)
Cases <- diff(covidF$Infections)
plot(Dates,Cases,type="b")
lines(Dates,predict(loess(Cases~Jours)),pch=16,cex=0.5,col="red")
nn<-nrow(covidF)
covidFB<-covidF[(nn-jj):nn,]
CasesB <- diff(covidFB$Infections)
n1<-CasesB[2:jj]
n0<-CasesB[-length(CasesB)]
taux <- median((n1-n0)/(n0+1))
if (taux>0.01) {evol="augmente"} else if (taux < (-0.01)) {evol="diminue"} else {evol="reste stable"}
knitr::opts_chunk$set(echo = TRUE)
jj<-30
pays<-"France"
knitr::opts_chunk$set(echo = TRUE)
jj<-30
pays<-"France"
covid<-read.csv2("https://www.data.gouv.fr/fr/datasets/r/f4935ed4-7a88-44e4-8f8a-33910a151d42" ,
header=TRUE, dec=".", sep=";",
skip=7, encoding = "UTF-8")
# Attention nous ne lisons pas les 3 première lignes grâce à skip=3
# Il s'agissait de 3 lignes de présentation des données
# Nous spécifions aussi l'encodage en UTF-8 (gestion des accents)
dim(covid)
covid[1:4, 1:5]
covid$Date<-as.POSIXct(covid$Date,format="%Y-%m-%d")
knitr::opts_chunk$set(echo = TRUE)
jj<-30
pays<-"France"
covid<-read.csv2("https://www.data.gouv.fr/fr/datasets/r/f4935ed4-7a88-44e4-8f8a-33910a151d42" ,
header=TRUE, dec=".", sep=";",
skip=7, encoding = "UTF-8")
# Attention nous ne lisons pas les 3 première lignes grâce à skip=3
# Il s'agissait de 3 lignes de présentation des données
# Nous spécifions aussi l'encodage en UTF-8 (gestion des accents)
dim(covid)
covid[1:4, 1:5]
covid$Date<-as.POSIXct(covid$Date,format="%Y-%m-%d")
covidF<-covid[covid$Pays==pays,]
covidF<-covidF[order(covidF$Date),]
Dates <- covidF$Date[-1]
Jours <- 1:length(Dates)
Cases <- diff(covidF$Infections)
plot(Dates,Cases,type="b")
lines(Dates,predict(loess(Cases~Jours)),pch=16,cex=0.5,col="red")
nn<-nrow(covidF)
https://www.data.gouv.fr/fr/datasets/r/f4935ed4-7a88-44e4-8f8a-33910a151d42
sort(unique(covid$Pays))
setwd("C:/Users/GHISLAINE KOSSONOU/Desktop/4A ISARA/Module E OPEN")
setwd("C:/Users/GHISLAINE KOSSONOU/Desktop/4A ISARA/Module E OPEN/Rmarkdown")
knitr::opts_chunk$set(echo = TRUE)
jj<-30
pays<-"Taiwan"
knitr::opts_chunk$set(echo = TRUE)
jj<-30
pays<-"Taiwan"
covid<-read.csv2("https://www.data.gouv.fr/fr/datasets/r/f4935ed4-7a88-44e4-8f8a-33910a151d42" ,
header=TRUE, dec=".", sep=";",
skip=7, encoding = "UTF-8")
# Attention nous ne lisons pas les 3 première lignes grâce à skip=3
# Il s'agissait de 3 lignes de présentation des données
# Nous spécifions aussi l'encodage en UTF-8 (gestion des accents)
dim(covid)
covid[1:4, 1:5]
covid$Date<-as.POSIXct(covid$Date,format="%Y-%m-%d")
knitr::opts_chunk$set(echo = TRUE)
jj<-30
pays<-"Taiwan"
covid<-read.csv2("https://www.data.gouv.fr/fr/datasets/r/f4935ed4-7a88-44e4-8f8a-33910a151d42" ,
header=TRUE, dec=".", sep=";",
skip=7, encoding = "UTF-8")
# Attention nous ne lisons pas les 3 première lignes grâce à skip=3
# Il s'agissait de 3 lignes de présentation des données
# Nous spécifions aussi l'encodage en UTF-8 (gestion des accents)
dim(covid)
covid[1:4, 1:5]
covid$Date<-as.POSIXct(covid$Date,format="%Y-%m-%d")
covidF<-covid[covid$Pays==pays,]
covidF<-covidF[order(covidF$Date),]
Dates <- covidF$Date[-1]
Jours <- 1:length(Dates)
Cases <- diff(covidF$Infections)
plot(Dates,Cases,type="b")
knitr::opts_chunk$set(echo = TRUE)
jj<-30
pays<-"Taiwan"
covid<-read.csv2("https://www.data.gouv.fr/fr/datasets/r/f4935ed4-7a88-44e4-8f8a-33910a151d42" ,
header=TRUE, dec=".", sep=";",
skip=7, encoding = "UTF-8")
# Attention nous ne lisons pas les 3 première lignes grâce à skip=3
# Il s'agissait de 3 lignes de présentation des données
# Nous spécifions aussi l'encodage en UTF-8 (gestion des accents)
dim(covid)
covid[1:4, 1:5]
covid$Date<-as.POSIXct(covid$Date,format="%Y-%m-%d")
covidF<-covid[covid$Pays==pays,]
covidF<-covidF[order(covidF$Date),]
Dates <- covidF$Date[-1]
Jours <- 1:length(Dates)
Cases <- diff(covidF$Infections)
plot(Dates,Cases,type="b")
sort(unique(covid$Pays))
knitr::opts_chunk$set(echo = TRUE)
jj<-30
pays<-"Zimbabwe"
covid<-read.csv2("https://www.data.gouv.fr/fr/datasets/r/f4935ed4-7a88-44e4-8f8a-33910a151d42" ,
header=TRUE, dec=".", sep=";",
skip=7, encoding = "UTF-8")
# Attention nous ne lisons pas les 3 première lignes grâce à skip=3
# Il s'agissait de 3 lignes de présentation des données
# Nous spécifions aussi l'encodage en UTF-8 (gestion des accents)
dim(covid)
covid[1:4, 1:5]
covid$Date<-as.POSIXct(covid$Date,format="%Y-%m-%d")
covidF<-covid[covid$Pays==pays,]
covidF<-covidF[order(covidF$Date),]
Dates <- covidF$Date[-1]
Jours <- 1:length(Dates)
Cases <- diff(covidF$Infections)
plot(Dates,Cases,type="b")
lines(Dates,predict(loess(Cases~Jours)),pch=16,cex=0.5,col="red")
nn<-nrow(covidF)
covidFB<-covidF[(nn-jj):nn,]
CasesB <- diff(covidFB$Infections)
n1<-CasesB[2:jj]
n0<-CasesB[-length(CasesB)]
taux <- median((n1-n0)/(n0+1))
if (taux>0.01) {evol="augmente"} else if (taux < (-0.01)) {evol="diminue"} else {evol="reste stable"}
library(knitr)
knitr::include_graphics("rmarkdown.png")
jouA <- read.csv2("joueurs.csv",header=TRUE,sep=";",row.names=1,encoding = "latin1")
names(jou)
Phisto <- function(tableau){
par(mar=c(2,4,4,1))
p <- ncol(tableau)
for( i in 1:p){
hist(tableau[,i],main=names(tableau)[i],xlab="",ylab="Effectif",col="gold")
rug(tableau[,i])
abline(v=mean(tableau[,i]),lty=2,col="red",lwd=2)
}
}
## utilisons la fonctions Phisto()
par(mfrow=c(3,3))
Phisto(jou)
kable(round(cor(jou),3))
library(FactoMineR)
#Partitionnement
hcjou<-HCPC(PCAs,graph=F,nb.clust=4,consol = F)
plot(PCAs,choix="var")
plot(hcjou,choice="map",draw.tree = F)
lapply(hcjou$desc.var$quanti,function(x) return(round(data.frame(x)[-6],2)))
num<-1:4
nom<-c("A","B","C","D")
desc<-c("Les mauvais joueurs provocateurs","Les mauvais buteurs","Les bons buteurs sans histoire","Les bons buteurs sous pression")
dd<-data.frame(Numero=num,Nom=nom,Description=desc)
kable(dd,row.names=F,caption="Description des groupes",align="c")
setwd("C:/Users/GHISLAINE KOSSONOU/Desktop/4A ISARA/Module E OPEN/Rmarkdown")
library(knitr)
knitr::include_graphics("rmarkdown.png")
library(knitr)
knitr::include_graphics("rmarkdown.png")
jouA <- read.csv2("joueurs.csv",header=TRUE,sep=";",row.names=1,encoding = "latin1")
jou1<-jouA[,c(1:2,4:8)]
jou1b<-jou1/(jouA$Minutes.jouees/60)
jou<-data.frame(jou1b,Minutes.jouees=jouA$Minutes.jouees)
jou<-na.omit(jou)
names(jou)
dim(jou)
head(round(jou,3),3)
Phisto <- function(tableau){
par(mar=c(2,4,4,1))
p <- ncol(tableau)
for( i in 1:p){
hist(tableau[,i],main=names(tableau)[i],xlab="",ylab="Effectif",col="gold")
rug(tableau[,i])
abline(v=mean(tableau[,i]),lty=2,col="red",lwd=2)
}
}
## utilisons la fonctions Phisto()
par(mfrow=c(3,3))
Phisto(jou)
#Reperez les quelques anomalies de distribution qui pourraient vous aider
#? comprendre la suite (ce n'est pas toujours le cas)
kable(round(cor(jou),3))
library(FactoMineR)
#Partitionnement
hcjou<-HCPC(PCAs,graph=F,nb.clust=4,consol = F)
plot(PCAs,choix="var")
plot(hcjou,choice="map",draw.tree = F)
lapply(hcjou$desc.var$quanti,function(x) return(round(data.frame(x)[-6],2)))
num<-1:4
nom<-c("A","B","C","D")
desc<-c("Les mauvais joueurs provocateurs","Les mauvais buteurs","Les bons buteurs sans histoire","Les bons buteurs sous pression")
dd<-data.frame(Numero=num,Nom=nom,Description=desc)
kable(dd,row.names=F,caption="Description des groupes",align="c")
